name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Tests (py${{ matrix.python-version }} â€¢ ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint (ruff)
        run: |
          python -m pip install ruff
          ruff check src tests

      - name: Type check (mypy)
        run: |
          python -m pip install mypy
          mypy src tests

      - name: Run tests
        run: |
          python -m pip install pytest
          pytest -q

  build-wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip build
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build
        run: |
          python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*
